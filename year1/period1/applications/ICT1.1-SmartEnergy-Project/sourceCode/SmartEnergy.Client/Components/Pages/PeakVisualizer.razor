@page "/PeakVisualizer"
@using BlazorBootstrap
@inject IMeasurementRepository measurementRepository;
@rendermode InteractiveServer

<PageTitle>Measurements</PageTitle>
<div id="peakMainPage" class="d-flex flex-column peakVisualizerPage" data-bs-theme="dark">
    <div id="InfoDiv">
        <h1>Thomas Koman</h1>
        <p>
            Mijn algoritme werkt door de volgende stappen:
            <ol>
                <li>Data van het vermogen van een ingesteld aantal dagen wordt opgehaald vanaf de avans API</li>
                <li>De data wordt gesplitst om het vermogen en timestamps te verkrijgen</li>
                <li>
                    Aangezien het vermogen een steeds stijgend aantal is moest ik het verschil uitrekenen.
                    In een for loop word het vermogen verschil tussen iedere dag berekent door nieuw - oud te doen.
                </li>
                <li>
                    Uit de verschil data wordt er de top 3 van elke dag gepakt, die dan worden gesorteerd op datum en tijd
                    zodat ze mooi op een rijtje staan.
                </li>
                <li>
                    Dit word gelplot in de grafiek en laten zien in de tabel
                </li>
            </ol>
        </p>
    </div>
    <hr/>
    <div id="propertiesDiv" class="d-flex flex-row">
        <div id="propertiesLeftDiv">
            <div id="meterIdSelect" class="input-group w-50">
                <span class="input-group-text" id="meterPrefix">2019-ETI-EMON-V01-</span>
                <select class="custom-select custom-select-lg w-25" @onchange="OnSelectChange">
                    <option>Choose a meter...</option>
                    @foreach (string meterId in meterIds)
                    {
                        if (meterId == "BF67F4")
                        {
                            <option selected value="@meterId">@meterId</option>       
                        }
                        else
                        {
                            <option value="@meterId">@meterId</option>      
                        }
                    }
                </select>
                <span class="input-group-text" id="meterSuffix">-16405E</span>
            </div>
            <div class="w-25 d-flex flex-row ">
                <DateInput TValue="DateOnly"
                           Value="datePast"
                           ValueExpression="() => datePast"
                           Placeholder="Enter Date"
                           ValueChanged="(value) => onDatepickerChange(value)"
                           EnableMinMax="true"
                           Max="dateToday"/>
                <h3>↔</h3>
                <span class="input-group-text">@dateToday (today)</span>
            </div>
            <div id="graphDiv">
                <p><em>@loadingMessage</em></p>
                <BarChart hidden="@dataHidden" @ref="barChart" Width="@chartWidth" Height="@chartHeight"/>
            </div>
        </div>
        <div id="propertiesRightDiv" class="p-3 overflow-scroll">
            <table hidden="@dataHidden" class="table table-striped table-hover custom-table">
                <thead>
                <tr>
                    <th class="w-25">Datum</th>
                    <th>Tijd</th>
                    <th>Vermogen</th>
                </tr>
                </thead>
                <tbody>
                @if(topValues != null)
                {
                    @foreach(var topValue in topValues)
                    {
                        <tr>
                            <td>@GetdateOnly(DateTime.Parse(topValue.Key))</td>
                            <td>@DateTime.Parse(topValue.Key).TimeOfDay</td>
                            <td>@topValue.Value Watt</td>
                        </tr>
                    }
                }
                </tbody>
            </table>
        </div>
    </div>
</div>
<script> 
    //Dynamically changes the full article box to the right styling to not mess with other pages
    var articlebox = document.getElementById("mainArticle");
    articlebox.classList.add("peakVisualizerPage");

    //Same with navbar (twice cuz funky naming)
    var navbars = document.getElementsByClassName("nav-scrollable");
    for (let i = 0; i < navbars.length; i++) 
    {
        navbars[i].classList.add("peakDarkNavBar");           
    }
    var navbars = document.getElementsByClassName("top-row");
    for (let i = 0; i < navbars.length; i++)
    {
        navbars[i].classList.add("peakDarkNavBar");
    }   
</script>
